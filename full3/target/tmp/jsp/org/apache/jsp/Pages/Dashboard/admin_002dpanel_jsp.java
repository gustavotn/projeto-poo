/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.5.v20170502
 * Generated at: 2022-12-06 18:05:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Pages.Dashboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.Product;
import java.util.List;

public final class admin_002dpanel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Product");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-br\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>LGC</title>\r\n");
      out.write("    <link href=\"http://localhost:8080/lgc-web/Pages/Dashboard/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- NAVBAR -->\r\n");
      out.write("    <div id=\"navbar\">\r\n");
      out.write("        <h1 id=\"title\">LGC - Client1</h1>       \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"container\">\r\n");
      out.write("        <h2>Dashboard</h2>\r\n");
      out.write("        <div class=\"dashboard\">\r\n");
      out.write("\r\n");
      out.write("                <button class=\"option_button\" type=\"button\" value=\"NovoProduto\"><a href=\"http://localhost:8080/lgc-web/Pages/Cadastro/cadastro.jsp\">Novo Produto</a></button>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"indicator-container\">\r\n");
      out.write("                <div class=\"label\"><p class=\"title-indicator\">Produtos Cadastrados</p><p class=\"indicator\">");
 out.print(Product.Cadastrados()); 
      out.write("</p></div>\r\n");
      out.write("                <div class=\"label\"><p class=\"title-indicator\">Valor Vendas/mês</p><p class=\"indicator\">R$ 0,00.</p></div>\r\n");
      out.write("                <div class=\"label\"><p class=\"title-indicator\">Qtd Vendas</p><p class=\"indicator\">0</p></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <h2>Seus Produtos</h2>\r\n");
      out.write("\r\n");
      out.write("        <table>\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td class=\"nome\">Produto</td>\r\n");
      out.write("                    <td class=\"nome\">Descrição</td>\r\n");
      out.write("                    <td class=\"nome\">Preço</td>\r\n");
      out.write("                    <td class=\"nome\">Excluir</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            ");
if(request.getAttribute("produtos") != null){
                List<?> produtos = (List<?>)request.getAttribute("produtos");
                for(int contador = 0; contador <(produtos.size()); contador++){
                    Product product = (Product) produtos.get(contador);
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
 out.print(product.getName());
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.print(product.getDescription());
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.print(product.getPrice());
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <form method=\"post\" action=\"/lgc-web/Excluir\">\r\n");
      out.write("                            <input type=\"hidden\" value=\"");
out.print(product.getCode());
      out.write("\" name=\"id\">\r\n");
      out.write("                            <input type=\"submit\" value=\"Excluir\" name=\"excluir\">\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            ");
}}
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
